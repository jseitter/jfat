name: Release

on:
  release:
    types: [published]
  workflow_dispatch:
    inputs:
      version:
        description: 'Release version'
        required: true
        default: '1.0.0'

jobs:
  release:
    runs-on: ubuntu-latest
    environment:
      name: production
      url: https://github.com/jseitter/jfat/packages
    permissions:
      contents: read
      packages: write
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up JDK 11
      uses: actions/setup-java@v4
      with:
        java-version: '11'
        distribution: 'temurin'
    
    - name: Cache Gradle packages
      uses: actions/cache@v4
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-
    
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
    
    - name: Set version from release tag
      if: github.event_name == 'release'
      run: |
        VERSION=${GITHUB_REF#refs/tags/v}
        echo "VERSION=$VERSION" >> $GITHUB_ENV
        echo "Release version: $VERSION"
    
    - name: Set version from input
      if: github.event_name == 'workflow_dispatch'
      run: |
        VERSION=${{ github.event.inputs.version }}
        echo "VERSION=$VERSION" >> $GITHUB_ENV
        echo "Manual release version: $VERSION"
    
    - name: Update version in build.gradle
      run: |
        sed -i "s/version = '[^']*'/version = '$VERSION'/" build.gradle
        echo "Updated build.gradle version to: $VERSION"
        grep "version = " build.gradle
    
    - name: Run tests before release
      run: ./gradlew test
    
    - name: Build release artifacts
      run: ./gradlew build -x test
    
    - name: Generate Javadoc
      run: ./gradlew javadoc
    
    - name: Create sources JAR
      run: ./gradlew sourcesJar
    
    - name: Create Javadoc JAR
      run: ./gradlew javadocJar
    
    - name: Publish to GitHub Package Registry
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        GITHUB_ACTOR: ${{ github.actor }}
      run: |
        ./gradlew publishAllPublicationsToGitHubPackagesRepository
    
    - name: Upload release artifacts
      if: github.event_name == 'release'
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ github.event.release.upload_url }}
        asset_path: build/libs/jfat-${{ env.VERSION }}.jar
        asset_name: jfat-${{ env.VERSION }}.jar
        asset_content_type: application/java-archive
    
    - name: Upload sources JAR to release
      if: github.event_name == 'release'
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ github.event.release.upload_url }}
        asset_path: build/libs/jfat-${{ env.VERSION }}-sources.jar
        asset_name: jfat-${{ env.VERSION }}-sources.jar
        asset_content_type: application/java-archive
    
    - name: Upload Javadoc JAR to release
      if: github.event_name == 'release'
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ github.event.release.upload_url }}
        asset_path: build/libs/jfat-${{ env.VERSION }}-javadoc.jar
        asset_name: jfat-${{ env.VERSION }}-javadoc.jar
        asset_content_type: application/java-archive
    
    - name: Create release summary
      run: |
        echo "## Release Summary" >> $GITHUB_STEP_SUMMARY
        echo "- **Version**: $VERSION" >> $GITHUB_STEP_SUMMARY
        echo "- **Artifacts**: Main JAR, Sources JAR, Javadoc JAR" >> $GITHUB_STEP_SUMMARY
        echo "- **Published to**: GitHub Package Registry" >> $GITHUB_STEP_SUMMARY
        echo "- **Java Compatibility**: Java 11+" >> $GITHUB_STEP_SUMMARY
        echo "- **Environment**: Production" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### Usage" >> $GITHUB_STEP_SUMMARY
        echo "\`\`\`gradle" >> $GITHUB_STEP_SUMMARY
        echo "dependencies {" >> $GITHUB_STEP_SUMMARY
        echo "    implementation 'net.seitter.jfat:jfat:$VERSION'" >> $GITHUB_STEP_SUMMARY
        echo "}" >> $GITHUB_STEP_SUMMARY
        echo "\`\`\`" >> $GITHUB_STEP_SUMMARY 